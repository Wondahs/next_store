// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      UserRole
  orders    Order[]
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  REGULAR
  ADMIN
}

model Order {
  id        Int      @id @default(autoincrement())
  description String
  specifications Json
  quantity     Int
  status       OrderStatus
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chatroom Chatroom?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  REVIEW
  PROCESSING
  COMPLETED
}

model Chatroom {
  id        Int      @id @default(autoincrement())
  messages  Message[]
  isClosed  Boolean
  summary   String?
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chatroom  Chatroom @relation(fields: [chatroomId], references: [id])
  chatroomId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
